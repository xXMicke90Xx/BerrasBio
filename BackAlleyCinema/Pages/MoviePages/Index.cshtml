@page
@model BackAlleyCinema.Pages.MoviePages.IndexModel
@using BackAlleyCinema.Models;
@{

    Dictionary<string, string> data;
}
<style>
    tr, .linkButton:nth-child(even) {
        background-color: #424242;
        opacity: 0.5;
    }

    tr, .linkButton:nth-child(odd) {
        background-color: #212121;
        opacity: 0.5;
    }

    .linkButton {
        color: white;
    }

    #TitlePicture {
        height: 600px;
        background-repeat: no-repeat;
        background-size: auto 100%;
        background-position: center;
        padding: 0px;
    }
</style>
<div id="TitlePicture" class="px-0 pt-5 d-flex justify-content-center align-items-center" style="background-image: url('@Model.ChosenMovie.ImageTo64')">
    @{
        var currentMovie = new Dictionary<string, string>() { { "MovieUrl", @Model.ChosenMovie.TrailerUrl } };

    }
    <a target="_blank" asp-all-route-data="currentMovie" asp-page="/Trailers/Index">
        <img src="~/images/Play.png" style="height: 60px; width: 60px; background-color: transparent;" />
    </a>

</div>

<div class="container justify-content-between mt-3 ">
    <div class="row mx-auto">
        <div class="col-3"></div>
        <div class="col-6 text-center">
            <h2 style="color: ghostwhite">Description</h2>
            <p style="color:white;">@Model.ChosenMovie.Description</p>
        </div>
        <div class="col-3"></div>
    </div>


</div>

<div class="text-center">
    <h1 class="btn-close-white py-5 ">Köp Biljetter</h1>

</div>
<hr />


<div class="container ">
    <div class="row">

        <table class="table table-striped table-hover ">
            <thead style="background-color: black; color: white;">
                <tr class="text-center">
                    <th onclick="sortTable(0)" class="col-4 fakeButton">Tid</th>
                    <th onclick="sortTable(1)" class="col-4 fakeButton">Salong</th>
                    <th onclick="sortTable(2)" class="col-4 fakeButton">Platser</th>
                </tr>
            </thead>

            <tbody id="tableBody">
                @{
                    int count = 0;
                }
                @foreach (var view in @Model.schedules)
                {

                    data = new Dictionary<string, string>() { { "Movie", @view.MovieId.ToString() }, { "Saloon", @view.SaloonId.ToString() }, { "Time", @view.ViewsId.ToString() } };
                    <tr class="text-center movieRow" style="color: white;">
                        <td style="justify-content: center" value="@view.ViewsId">
                            <a class="linkButton" asp-all-route-data="data" asp-page="../Cinema/Index" style="border: none; display: block; margin:auto" type="submit">
                                @TimeOnly.FromDateTime(view.ViewsId)
                            </a>
                        </td>
                        <td style="justify-content: center">
                            <a class="linkButton" asp-all-route-data="data" asp-page="../Cinema/Index" style="border: none; display: block; margin:auto" type="submit">
                                @view.SaloonId
                            </a>
                        </td>
                        <td style=\"justify-content: center">
                            <a class="linkButton" asp-all-route-data="data" asp-page="../Cinema/Index" style="border: none; text-decoration: none; display: block; margin:auto" type="submit">@Model.Seats[count]</a>@*Fulhacket, detta är inte den optimala lösningen men sorteringen vägrar funka på denna kolumn annars! Han ränkar denna efter html längden, vilket är skitskumt!*@
                        </td>

                    </tr>
                    count++;
                }

            </tbody>

        </table>


    </div>
</div>




<style>
    .fakeButton:hover {
        cursor: pointer;
        background-color: rgba(255, 255, 255, 0.2);
    }

    .movieRow:hover {
        cursor: pointer;
        background-color: rgba(0, 0, 0, 0.2);
    }
</style>


<script>

    function sortTable(n) {
      var table, rows, switching, i, z, shouldSwitch, dir, switchcount = 0;
      let x,y;
      table = document.getElementById("tableBody");
      switching = true;

      dir = "asc";

      while (switching) {

        switching = false;
        rows = table.rows;

        for (i = 0; i < (rows.length-1); i++) {

          shouldSwitch = false;

          x = rows[i].getElementsByTagName("a")[n];
          y = rows[i + 1].getElementsByTagName("a")[n];


          if (dir == "asc") {
              if (n > 1){
                if (parseInt(x.innerHTML.trim().toLowerCase()) > parseInt(y.innerHTML.trim().toLowerCase())) {

              shouldSwitch= true;
              break;
                }
              }
            else if (x.innerHTML.trim().toLowerCase() > y.innerHTML.trim().toLowerCase()) {

              shouldSwitch= true;
              break;
            }
          } else if (dir == "desc") {
              if (n > 1){
                if (parseInt(x.innerHTML.trim().toLowerCase()) < parseInt(y.innerHTML.trim().toLowerCase())) {

              shouldSwitch= true;
              break;
                }
              }

            else if (x.innerHTML.trim().toLowerCase() < y.innerHTML.trim().toLowerCase()) {

              shouldSwitch = true;
              break;
            }
          }
        }
        if (shouldSwitch) {

          rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
          switching = true;

          switchcount ++;
        } else {

          if (switchcount == 0 && dir == "asc") {
            dir = "desc";
            switching = true;
          }
        }
      }
    }

</script>




